module.exports = [{"name":"Img","description":"An image tag that fades in.","props":{"src":{"flowType":{"name":"string"},"required":true,"description":"The img src"},"style":{"flowType":{"name":"signature","type":"object","raw":"{}","signature":{"properties":[]}},"required":false,"description":"Any style to mix in"}},"code":"// @flow\nimport React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport styles from './styles'\n\ntype Props = {\n  /** The img src */\n  src: string,\n  /** Any style to mix in */\n  style?: {}\n}\n\ntype State = {\n  isLoading: boolean,\n  src: string\n}\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n`\n\nconst FadeInWrapper = styled.div`\n  animation-name: ${props => (props.isLoading ? 'none' : fadeIn)};\n  animation-duration: 500ms;\n  animation-timing-function: ease-in-out;\n  animation-fill-mode: both;\n`\n\n/**\n * An image tag that fades in.\n */\nclass Img extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      isLoading: true,\n      src: props.src\n    }\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    const currentSrc = this.state.src\n    const nextSrc = nextProps.src\n\n    if (currentSrc && nextSrc && currentSrc !== nextSrc) {\n      this.setState({ src: nextSrc, isLoading: true })\n    }\n  }\n\n  render = () => (\n    <FadeInWrapper isLoading={this.state.isLoading}>\n      <img\n        alt=\"img\"\n        src={this.state.src}\n        onLoad={() => this.setState({ isLoading: false })}\n        style={{\n          display: this.state.isLoading ? 'none' : 'inline-block',\n          ...styles.img\n        }}\n      />\n    </FadeInWrapper>\n  )\n}\n\nexport default Img\n","examples":[{"name":"ExampleOne","description":"","code":"import React from 'react'\nimport { Img } from 'dope-ui'\n\nconst ImgExample = () => <Img src=\"http://thehangarla.com/images/home/black_sofa.jpg\" />\n\nexport default ImgExample\n"}]},{"name":"Placeholder","description":"A div with a fading gradient for use as a placeholder.","props":{"style":{"flowType":{"name":"signature","type":"object","raw":"{}","signature":{"properties":[]}},"required":false,"description":"The img src"}},"code":"// @flow\nimport React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\ntype Props = {\n  /** The img src */\n  style?: {}\n}\n\n// keyframes returns a unique name based on a hash of the contents of the keyframes\nconst bgPosition = keyframes`\n  0% {\n    background-position: 49% 0%;\n  }\n  50% {\n    background-position: 52% 100%;\n  }\n  100% {\n    background-position: 49% 0%;\n  }\n`\n\n// Here we create a component that will rotate everything we pass in over two seconds\nconst AnimateBg = styled.div`\n  background: linear-gradient(135deg, #ffffff, #d3d3d3);\n  background-size: 200% 200%;\n  animation: ${bgPosition} 1500ms ease-in-out infinite;\n  width: 100%;\n  height: 100%;\n  box-shadow: 0 3px 20px 0 rgba(0, 0, 0, 0.05), 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 0 1px 0 rgba(0, 0, 1, 0.1);\n`\n/**\n * A div with a fading gradient for use as a placeholder.\n */\nconst Placeholder = ({ style }: Props) => <AnimateBg style={style} />\n\nexport default Placeholder\n","examples":[{"name":"ExampleOne","description":"","code":"import React from 'react'\nimport { Placeholder } from 'dope-ui'\n\nconst PlaceholderExample = () => <Placeholder style={{ width: 300, height: 350 }} />\n\nexport default PlaceholderExample\n"}]}]